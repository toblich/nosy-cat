version: "2"

services:
  ingress:
    build:
      context: .
      dockerfile: ingress.dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./ingress/tsconfig.json:/project/ingress/tsconfig.json"
      - "./ingress/src:/project/app/src"
    command: npm run start:dockerized
    links:
      - kafka
    environment:
      KAFKA: kafka:9093

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  redis:
    image: redis
    ports:
      - 6379:6379

  redis-cli:
    image: redis
    links:
      - redis
    command: redis-cli -h redis
