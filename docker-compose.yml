version: "3.7"

# Using base extension fields to avoid extra repetition
# See https://docs.docker.com/compose/compose-file/#extension-fields for details

x-base-build: &base-build
  context: .
  dockerfile: service.dockerfile

x-base-command: &base-command sh -c "npm run start:dockerized"
x-base-kafka-command: &base-kafka-command sh -c "./wait-for-it.sh $$KAFKA -t 30 -- npm run start:dockerized"

x-base-environment: &base-environment
  KAFKA: kafka:9093
  REDIS_HOST: redis
  GRAPH_HOST: graph-service

############
# SERVICES #
############

services:
  ingress:
    build:
      <<: *base-build
      args:
        - SERVICE=ingress
    ports:
      - "3000:3000"
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./ingress/tsconfig.json:/project/app/tsconfig.json"
      - "./ingress/src:/project/app/src"
    links:
      - kafka
    command: *base-kafka-command
    environment: *base-environment
    networks:
      - nosy-cat
      - default

  dependency-detector:
    build:
      <<: *base-build
      args:
        - SERVICE=dependency-detector
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./dependency-detector/tsconfig.json:/project/app/tsconfig.json"
      - "./dependency-detector/src:/project/app/src"
    command: *base-kafka-command
    links:
      - graph-service
      - kafka
    environment: *base-environment
    networks:
      - default

  anomaly-detector:
    build:
      <<: *base-build
      args:
        - SERVICE=anomaly-detector
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./anomaly-detector/tsconfig.json:/project/app/tsconfig.json"
      - "./anomaly-detector/src:/project/app/src"
    command: *base-kafka-command
    links:
      - graph-service
      - kafka
    depends_on:
      - kafka
    environment:
      <<: *base-environment
    networks:
      - default

  graph-service:
    build:
      <<: *base-build
      args:
        - SERVICE=graph-service
    ports:
      - "4000:4000"
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./graph-service/tsconfig.json:/project/app/tsconfig.json"
      - "./graph-service/src:/project/app/src"
    command: *base-command
    links:
      - redis
    environment:
      <<: *base-environment
    networks:
      - default

  pagerduty-integration:
    build:
      <<: *base-build
      args:
        - SERVICE=pagerduty-integration
    volumes:
      - "./nodemon.json:/project/nodemon.json"
      - "./helpers/tsconfig.json:/project/helpers/tsconfig.json"
      - "./helpers/declarations:/project/helpers/declarations"
      - "./helpers/src:/project/helpers/src"
      - "./pagerduty-integration/tsconfig.json:/project/app/tsconfig.json"
      - "./pagerduty-integration/src:/project/app/src"
    command: *base-kafka-command
    links:
      - kafka
    depends_on:
      - kafka
    environment:
      <<: *base-environment
    networks:
      - default

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
    networks:
      - default

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    networks:
      - default

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - default

  redis-cli:
    image: redis
    links:
      - redis
    command: redis-cli -h redis
    networks:
      - default

networks:
  nosy-cat:
    driver: bridge
  default:
    driver: bridge
